@page "/login"
@layout AuthLayout

@inject Blazored.LocalStorage.ILocalStorageService localStorage
@inject IAuthUiService AuthUiService
@inject NavigationManager NavigationManager

<EditForm Model="@user" OnValidSubmit="HandleSubmit">
     <DataAnnotationsValidator />
    <div>
        <label for="email">Email</label>
        <InputText id="email"  @bind-Value="@user.Email" class="form-control"></InputText>
    </div>
    <div>
        <label for="password">Password</label>
        <InputText id="password" @bind-Value="@user.Password" class="form-control" type="password"></InputText>
    </div>
    
    <br />
    <button type="submit" class="btn btn-primary">Login</button>
   
</EditForm>




@code {

    LoginParams user = new LoginParams { };

    async Task HandleSubmit()
    {
        try
        {
            await AuthUiService.Login(user);
            if (!string.IsNullOrEmpty(AuthUiService.User.Email))
            {
                await localStorage.SetItemAsStringAsync("UserToken",AuthUiService.User.Email);
                await localStorage.SetItemAsStringAsync("Role",AuthUiService.User.Role?.RoleName);
                NavigationManager.NavigateTo("/dashboard");
            }
            
        }
        catch (Exception e)
        {
            throw e;
        }
    }

}
