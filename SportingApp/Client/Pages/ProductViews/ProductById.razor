@page "/productById"
@page "/productById/{id:int}"


@inject IProductUiService ProductUiService
@inject NavigationManager NavigationManager

@if (Id == null)
{
    <PageTitle>Create a new Product</PageTitle>
    <h3>Create a new Product</h3>
}
else
{
    <PageTitle>Edit @product.Name</PageTitle>
    <h3>Edit @product.Name</h3>
}
<EditForm Model="@product" OnValidSubmit="HandleSubmit">
     <DataAnnotationsValidator />
    <div>
        <label for="code">Code</label>
        <InputText id="code"  @bind-Value="product.Code" class="form-control"></InputText>
    </div>
    <div>
        <label for="name">Name</label>
        <InputText id="name" @bind-Value="product.Name" class="form-control"></InputText>
    </div>
     <div>
        <label for="price">Price</label>
        <InputNumber id="price" itemtype="number" @bind-Value="product.Price" class="form-control"></InputNumber>
    </div>
     <div>
        <label for="releaseDate">Release Date</label>
        <InputDate id="releaseDate" itemtype="Date"  @bind-Value="product.ReleaseDate" class="form-control"></InputDate>
    </div>
    <br />
    <button type="submit" class="btn btn-primary">@btnText</button>
    <button type="button" class="btn btn-danger" @onclick="cancelSaveUpdate">Cancel</button>
</EditForm>


@code {
    [Parameter]
    public int? Id { get; set; }
    string btnText = string.Empty;

    Product product = new Product { };

    protected override async Task OnInitializedAsync()
    {
        btnText = Id == null ? "Save" : "Update";
    }

    protected override async Task OnParametersSetAsync()
    {
        if (Id == null)
        { }
        else
        {
            product = await ProductUiService.GetProductById((int)Id);
        }
    }
    async Task HandleSubmit()
    {
        try
        {
            if (Id == null)
            {
                await ProductUiService.CreateProducts(product);
            }
            else
            {
                await ProductUiService.CreateProducts(product);
            }
        }
        catch (Exception e)
        {
            throw e;
        }
    }
    void cancelSaveUpdate()
    {
        NavigationManager.NavigateTo("/products");
    }
}
